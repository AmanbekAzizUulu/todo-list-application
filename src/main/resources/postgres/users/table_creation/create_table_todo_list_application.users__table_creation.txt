-- Создаем таблицу
CREATE TABLE todo_list_application.users (
    id SERIAL PRIMARY KEY,
    user_code TEXT UNIQUE NOT NULL DEFAULT uuid_generate_v4()::TEXT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash TEXT NOT NULL,
    date_of_creation TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Функция для обновления last_updated_at при обновлении записи
CREATE OR REPLACE FUNCTION update_last_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.last_updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Триггер для обновления last_updated_at перед обновлением записи
CREATE TRIGGER users_last_updated_trigger
BEFORE UPDATE ON todo_list_application.users
FOR EACH ROW EXECUTE FUNCTION update_last_updated_at();
